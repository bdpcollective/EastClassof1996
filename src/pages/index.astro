---
// Astro page component
import Header from '../components/Header.astro';
import Banner from '../components/Banner.astro';
import ReunionEvents from '../components/ReunionEvents.astro';
import Memories from '../components/Memories.astro';
import Hero from '../components/Hero.astro';
import Services from '../components/Services.astro';
import About from '../components/About.astro';
import Testimonial from '../components/Testimonial.astro';
import Blog from '../components/Blog.astro';
import Contact from '../components/Contact.astro';
import Footer from '../components/Footer.astro';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700&family=Noto+Serif:wght@400;700&display=swap" rel="stylesheet">
    <title>Lincoln East High School Class of 1996 | 30th Reunion</title>
    <meta name="description" content="Join us for the Lincoln East High School Class of 1996 30th Reunion! May 29-30, 2026 in Lincoln, Nebraska. Reconnect with classmates, share memories, and celebrate 30 years since graduation." />
    <meta property="og:title" content="Lincoln East High School Class of 1996 | 30th Reunion" />
    <meta property="og:description" content="Join us for the Lincoln East High School Class of 1996 30th Reunion! May 29-30, 2026 in Lincoln, Nebraska. Reconnect with classmates, share memories, and celebrate 30 years since graduation." />
    <meta property="og:image" content="https://static.wixstatic.com/media/4c7a9c_a04a64850b9f47c7adff59cfdc024a99~mv2.jpg/v1/fill/w_2500,h_1666,al_c/4c7a9c_a04a64850b9f47c7adff59cfdc024a99~mv2.jpg" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Lincoln East High School Class of 1996 | 30th Reunion" />
    <meta name="twitter:description" content="Join us for the Lincoln East High School Class of 1996 30th Reunion! May 29-30, 2026 in Lincoln, Nebraska. Reconnect with classmates, share memories, and celebrate 30 years since graduation." />
    <meta name="twitter:image" content="https://static.wixstatic.com/media/4c7a9c_a04a64850b9f47c7adff59cfdc024a99~mv2.jpg/v1/fill/w_2500,h_1666,al_c/4c7a9c_a04a64850b9f47c7adff59cfdc024a99~mv2.jpg" />
  </head>
  <body>
    <!-- Particle System Background -->
    <div id="particles-container" class="particles-container"></div>

    <Header />
    <Banner />
    <main>
      <About />
      <ReunionEvents />
      <Memories />

    </main>
    <Footer />

    <script>
      // Particle System
      function createParticleSystem() {
        const container = document.getElementById('particles-container');
        if (!container) return;

        const colors = [
          '#1e40af',  // Primary blue
          '#3b82f6',  // Lighter blue
          '#60a5fa',  // Even lighter blue
          '#93c5fd',  // Light blue
          '#dbeafe',  // Very light blue
          '#ffffff',  // White
          'rgba(255, 255, 255, 0.8)', // Semi-transparent white
          'rgba(30, 64, 175, 0.6)',   // Semi-transparent blue
        ];

        const shapes = ['circle', 'square', 'triangle'];
        const animations = ['float-up', 'float-diagonal', 'float-zigzag'];

        function createParticle() {
          const particle = document.createElement('div');
          particle.className = 'particle';

          // Random shape
          const shape = shapes[Math.floor(Math.random() * shapes.length)];
          particle.classList.add(shape);

          // Random size
          const size = Math.random() * 8 + 2; // 2-10px
          if (shape !== 'triangle') {
            particle.style.width = size + 'px';
            particle.style.height = size + 'px';
          }

          // Random color
          const color = colors[Math.floor(Math.random() * colors.length)];
          if (shape === 'triangle') {
            particle.style.borderBottomColor = color;
          } else {
            particle.style.backgroundColor = color;
          }

          // Random position
          particle.style.left = Math.random() * 100 + '%';

          // Random animation
          const animation = animations[Math.floor(Math.random() * animations.length)];
          particle.style.animation = `${animation} ${Math.random() * 10 + 5}s linear infinite`;

          // Random delay
          particle.style.animationDelay = Math.random() * 5 + 's';

          container.appendChild(particle);

          // Remove particle after animation completes
          setTimeout(() => {
            if (container.contains(particle)) {
              container.removeChild(particle);
            }
          }, 15000);
        }

        // Create initial particles
        for (let i = 0; i < 15; i++) {
          setTimeout(() => createParticle(), Math.random() * 5000);
        }

        // Continue creating particles
        setInterval(() => {
          if (Math.random() > 0.7) { // 30% chance each interval
            createParticle();
          }
        }, 1000);
      }

      // Initialize particle system when page loads
      document.addEventListener('DOMContentLoaded', () => {
        createParticleSystem();
      });
    </script>
  </body>
</html>

<style>
  html {
    font-family: system-ui, sans-serif;
    overflow-x: hidden;
  }
  body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
  }

  * {
    box-sizing: border-box;
  }

  /* Particle System */
  .particles-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
  }

  .particle {
    position: absolute;
    border-radius: 50%;
    pointer-events: none;
    opacity: 0;
    animation: float-up linear infinite;
  }

  .particle.circle {
    border-radius: 50%;
  }

  .particle.square {
    border-radius: 2px;
  }

  .particle.triangle {
    width: 0 !important;
    height: 0 !important;
    border-left: 4px solid transparent;
    border-right: 4px solid transparent;
    border-bottom: 8px solid;
    border-radius: 0;
  }

  @keyframes float-up {
    0% {
      transform: translateY(100vh) rotate(0deg) scale(0);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translateY(-100px) rotate(360deg) scale(1);
      opacity: 0;
    }
  }

  @keyframes float-diagonal {
    0% {
      transform: translate(0, 100vh) rotate(0deg) scale(0);
      opacity: 0;
    }
    10% {
      opacity: 0.8;
    }
    90% {
      opacity: 0.8;
    }
    100% {
      transform: translate(200px, -100px) rotate(360deg) scale(1);
      opacity: 0;
    }
  }

  @keyframes float-zigzag {
    0% {
      transform: translate(0, 100vh) rotate(0deg);
      opacity: 0;
    }
    25% {
      transform: translate(100px, 75vh) rotate(90deg);
      opacity: 1;
    }
    50% {
      transform: translate(-50px, 50vh) rotate(180deg);
      opacity: 1;
    }
    75% {
      transform: translate(75px, 25vh) rotate(270deg);
      opacity: 1;
    }
    100% {
      transform: translate(0, -100px) rotate(360deg);
      opacity: 0;
    }
  }
</style>